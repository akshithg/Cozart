cd src && make test-sentinel
make[1]: Entering directory '/benchmark-scripts/redis-src/src'
Starting sentinel #0 at port 20000
Starting sentinel #1 at port 20001
Starting sentinel #2 at port 20002
Starting sentinel #3 at port 20003
Starting sentinel #4 at port 20004
Starting redis #0 at port 30000
Starting redis #1 at port 30001
Starting redis #2 at port 30002
Starting redis #3 at port 30003
Starting redis #4 at port 30004
Testing unit: 00-base.tcl
20:44:00> (init) Restart killed instances: OK
20:44:00> (init) Remove old master entry from sentinels: OK
20:44:00> (init) Create a master-slaves cluster of 5 instances: OK
20:44:01> (init) Sentinels can start monitoring a master: OK
20:44:02> (init) Sentinels can talk with the master: OK
20:44:02> (init) Sentinels are able to auto-discover other sentinels: OK
20:44:03> (init) Sentinels are able to auto-discover slaves: OK
20:44:03> Basic failover works if the master is down: OK
20:44:07> New master 127.0.0.1:30003 role matches: OK
20:44:07> All the other slaves now point to the new master: OK
20:44:07> The old master eventually gets reconfigured as a slave: OK
20:44:17> ODOWN is not possible without N (quorum) Sentinels reports: OK
20:44:18> Failover is not possible without majority agreement: OK
20:44:22> Failover works if we configure for absolute agreement: OK
20:44:28> New master 127.0.0.1:30001 role matches: OK
Testing unit: 01-conf-update.tcl
20:44:28> (init) Restart killed instances: OK
20:44:28> (init) Remove old master entry from sentinels: OK
20:44:31> (init) Create a master-slaves cluster of 5 instances: OK
20:44:32> (init) Sentinels can start monitoring a master: OK
20:44:33> (init) Sentinels can talk with the master: OK
20:44:33> (init) Sentinels are able to auto-discover other sentinels: OK
20:44:35> (init) Sentinels are able to auto-discover slaves: OK
20:44:35> We can failover with Sentinel 1 crashed: OK
20:44:40> After Sentinel 1 is restarted, its config gets updated: OK
20:44:40> New master 127.0.0.1:30001 role matches: OK
Testing unit: 02-slaves-reconf.tcl
20:44:40> (init) Restart killed instances: OK
20:44:40> (init) Remove old master entry from sentinels: OK
20:44:40> (init) Create a master-slaves cluster of 5 instances: OK
20:44:41> (init) Sentinels can start monitoring a master: OK
20:44:42> (init) Sentinels can talk with the master: OK
20:44:42> (init) Sentinels are able to auto-discover other sentinels: OK
20:44:43> (init) Sentinels are able to auto-discover slaves: OK
20:44:43> Check that slaves replicate from current master: OK
20:44:43> Crash the master and force a failover: OK
20:44:48> Check that slaves replicate from current master: OK
20:44:49> Kill a slave instance: OK
20:44:49> Crash the master and force a failover: OK
20:44:53> Check that slaves replicate from current master: OK
20:45:04> Wait for failover to end: OK
20:45:04> Restart killed slave and test replication of slaves again...: OK
20:45:04> Check that slaves replicate from current master: OK
Testing unit: 03-runtime-reconf.tcl
Testing unit: 04-slave-selection.tcl
Testing unit: 05-manual.tcl
20:45:25> (init) Restart killed instances: OK
20:45:25> (init) Remove old master entry from sentinels: OK
20:45:25> (init) Create a master-slaves cluster of 5 instances: OK
20:45:26> (init) Sentinels can start monitoring a master: OK
20:45:27> (init) Sentinels can talk with the master: OK
20:45:27> (init) Sentinels are able to auto-discover other sentinels: OK
20:45:29> (init) Sentinels are able to auto-discover slaves: OK
20:45:29> Manual failover works: OK
20:45:30> New master 127.0.0.1:30001 role matches: OK
20:45:30> All the other slaves now point to the new master: OK
20:45:30> The old master eventually gets reconfigured as a slave: OK
Testing unit: 06-ckquorum.tcl
20:45:40> (init) Restart killed instances: OK
20:45:40> (init) Remove old master entry from sentinels: OK
20:45:40> (init) Create a master-slaves cluster of 5 instances: OK
20:45:41> (init) Sentinels can start monitoring a master: OK
20:45:42> (init) Sentinels can talk with the master: OK
20:45:42> (init) Sentinels are able to auto-discover other sentinels: OK
20:45:44> (init) Sentinels are able to auto-discover slaves: OK
20:45:44> CKQUORUM reports OK and the right amount of Sentinels: OK
20:45:44> CKQUORUM detects quorum cannot be reached: OK
20:45:44> CKQUORUM detects failover authorization cannot be reached: OK
Testing unit: 07-down-conditions.tcl
20:45:53> (init) Restart killed instances: OK
20:45:53> (init) Remove old master entry from sentinels: OK
20:45:54> (init) Create a master-slaves cluster of 5 instances: OK
20:45:54> (init) Sentinels can start monitoring a master: OK
20:45:55> (init) Sentinels can talk with the master: OK
20:45:55> (init) Sentinels are able to auto-discover other sentinels: OK
20:45:57> (init) Sentinels are able to auto-discover slaves: OK
20:45:57> Crash the majority of Sentinels to prevent failovers for this unit: OK
20:45:59> SDOWN is triggered by non-responding but not crashed instance: couldn't execute "../../../src/redis-cli": no such file or directory
    while executing
"exec ../../../src/redis-cli -h $host -p $port debug sleep 10 > /dev/null &"
    ("uplevel" body line 4)
    invoked from within
"uplevel 1 $code"
    (procedure "test" line 6)
    invoked from within
"test "SDOWN is triggered by non-responding but not crashed instance" {
    lassign [S 4 SENTINEL GET-MASTER-ADDR-BY-NAME mymaster] host port
    ensur..."
    (file "../tests/07-down-conditions.tcl" line 28)
    invoked from within
"source $test"
    (procedure "run_tests" line 9)
    invoked from within
"run_tests"
    (procedure "main" line 5)
    invoked from within
"main"
Cleaning up...
make[1]: *** [Makefile:245: test-sentinel] Error 1
make[1]: Leaving directory '/benchmark-scripts/redis-src/src'
make: *** [Makefile:6: test-sentinel] Error 2
