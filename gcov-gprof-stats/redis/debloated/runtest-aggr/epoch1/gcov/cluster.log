Starting redis #0 at port 30000
Starting redis #1 at port 30001
Starting redis #2 at port 30002
Starting redis #3 at port 30003
Starting redis #4 at port 30004
Starting redis #5 at port 30005
Starting redis #6 at port 30006
Starting redis #7 at port 30007
Starting redis #8 at port 30008
Starting redis #9 at port 30009
Starting redis #10 at port 30010
Starting redis #11 at port 30011
Starting redis #12 at port 30012
Starting redis #13 at port 30013
Starting redis #14 at port 30014
Starting redis #15 at port 30015
Starting redis #16 at port 30016
Starting redis #17 at port 30017
Starting redis #18 at port 30018
Starting redis #19 at port 30019
Testing unit: 00-base.tcl
20:51:42> (init) Restart killed instances: OK
20:51:42> Cluster nodes are reachable: OK
20:51:42> Cluster nodes hard reset: OK
20:51:44> Cluster Join and auto-discovery test: OK
20:51:49> Before slots allocation, all nodes report cluster failure: OK
20:51:49> Different nodes have different IDs: OK
20:51:49> It is possible to perform slot allocation: OK
20:51:49> After the join, every node gets a different config epoch: .OK
20:51:51> Nodes should report cluster_state is ok now: OK
20:51:53> It is possible to write and read from the cluster: OK
Testing unit: 01-faildet.tcl
20:51:53> (init) Restart killed instances: OK
20:51:53> Cluster nodes are reachable: OK
20:51:53> Cluster nodes hard reset: OK
20:51:58> Cluster Join and auto-discovery test: OK
20:52:03> Before slots allocation, all nodes report cluster failure: OK
20:52:04> Create a 5 nodes cluster: OK
20:52:08> Cluster should start ok: OK
20:52:08> Killing two slave nodes: OK
20:52:09> Cluster should be still up: OK
20:52:09> Killing one master node: OK
20:52:10> Cluster should be down now: OK
20:52:13> Restarting master node: OK
20:52:13> Cluster should be up again: OK
Testing unit: 02-failover.tcl
20:52:20> (init) Restart killed instances: redis/5 redis/6 OK
20:52:20> Cluster nodes are reachable: OK
20:52:20> Cluster nodes hard reset: OK
20:52:25> Cluster Join and auto-discovery test: OK
20:52:30> Before slots allocation, all nodes report cluster failure: OK
20:52:30> Create a 5 nodes cluster: OK
20:52:34> Cluster is up: OK
20:52:34> Cluster is writable: OK
20:52:34> Instance #5 is a slave: OK
20:52:34> Instance #5 synced with the master: OK
20:52:34> Killing one master node: OK
20:52:35> Wait for failover: OK
20:52:39> Cluster should eventually be up again: OK
20:52:40> Cluster is writable: OK
20:52:40> Instance #5 is now a master: OK
20:52:40> Restarting the previously killed master node: OK
20:52:40> Instance #0 gets converted into a slave: OK
Testing unit: 03-failover-loop.tcl
20:52:40> (init) Restart killed instances: OK
20:52:40> Cluster nodes are reachable: OK
20:52:40> Cluster nodes hard reset: OK
20:52:44> Cluster Join and auto-discovery test: OK
20:52:50> Before slots allocation, all nodes report cluster failure: OK
20:52:50> Create a 5 nodes cluster: OK
20:52:53> Cluster is up: OK
--- Iteration 19 ---
20:52:54> Wait for slave of #2 to sync: OK
20:52:54> Cluster is writable before failover: OK
20:52:54> Killing node #2: OK
20:52:55> Wait failover by #7 with old epoch 3: OK
20:52:59> Cluster should eventually be up again: OK
20:52:59> Cluster is writable again: OK
20:52:59> Restarting node #2: OK
20:52:59> Instance #2 is now a slave: OK
20:52:59> We can read back the value we set before: OK
--- Iteration 18 ---
20:53:00> Wait for slave of #1 to sync: OK
20:53:00> Cluster is writable before failover: OK
20:53:00> Killing node #1: OK
20:53:01> Wait failover by #6 with old epoch 2: OK
20:53:05> Cluster should eventually be up again: OK
20:53:05> Cluster is writable again: OK
20:53:05> Restarting node #1: OK
20:53:05> Instance #1 is now a slave: OK
20:53:05> We can read back the value we set before: OK
--- Iteration 17 ---
20:53:06> Wait for slave of #7 to sync: OK
20:53:06> Cluster is writable before failover: OK
20:53:06> Killing node #7: OK
20:53:07> Wait failover by #2 with old epoch 21: OK
20:53:11> Cluster should eventually be up again: OK
20:53:11> Cluster is writable again: OK
20:53:12> Restarting node #7: OK
20:53:12> Instance #7 is now a slave: OK
20:53:12> We can read back the value we set before: OK
--- Iteration 16 ---
20:53:12> Cluster is writable before failover: OK
20:53:12> Killing node #9: OK
20:53:13> Cluster should eventually be up again: OK
20:53:13> Cluster is writable again: OK
20:53:13> Restarting node #9: OK
20:53:13> Instance #9 is now a slave: OK
20:53:13> We can read back the value we set before: OK
--- Iteration 15 ---
20:53:13> Cluster is writable before failover: OK
20:53:13> Killing node #1: OK
20:53:13> Cluster should eventually be up again: OK
20:53:13> Cluster is writable again: OK
20:53:13> Restarting node #1: OK
20:53:13> Instance #1 is now a slave: OK
20:53:13> We can read back the value we set before: OK
--- Iteration 14 ---
20:53:14> Cluster is writable before failover: OK
20:53:14> Killing node #7: OK
20:53:15> Cluster should eventually be up again: OK
20:53:15> Cluster is writable again: OK
20:53:15> Restarting node #7: OK
20:53:15> Instance #7 is now a slave: OK
20:53:15> We can read back the value we set before: OK
--- Iteration 13 ---
20:53:15> Cluster is writable before failover: OK
20:53:15> Killing node #9: OK
20:53:15> Cluster should eventually be up again: OK
20:53:15> Cluster is writable again: OK
20:53:15> Restarting node #9: OK
20:53:15> Instance #9 is now a slave: OK
20:53:15> We can read back the value we set before: OK
--- Iteration 12 ---
20:53:15> Cluster is writable before failover: OK
20:53:15> Killing node #1: OK
20:53:16> Cluster should eventually be up again: OK
20:53:17> Cluster is writable again: OK
20:53:17> Restarting node #1: OK
20:53:17> Instance #1 is now a slave: OK
20:53:17> We can read back the value we set before: OK
--- Iteration 11 ---
20:53:17> Cluster is writable before failover: OK
20:53:17> Killing node #1: OK
20:53:18> Cluster should eventually be up again: OK
20:53:18> Cluster is writable again: OK
20:53:18> Restarting node #1: OK
20:53:18> Instance #1 is now a slave: OK
20:53:18> We can read back the value we set before: OK
--- Iteration 10 ---
20:53:18> Wait for slave of #4 to sync: OK
20:53:18> Cluster is writable before failover: OK
20:53:18> Killing node #4: OK
20:53:19> Wait failover by #9 with old epoch 5: OK
20:53:23> Cluster should eventually be up again: OK
20:53:24> Cluster is writable again: OK
20:53:24> Restarting node #4: OK
20:53:24> Instance #4 is now a slave: OK
20:53:25> We can read back the value we set before: OK
--- Iteration 9 ---
20:53:26> Wait for slave of #9 to sync: OK
20:53:26> Cluster is writable before failover: OK
20:53:26> Killing node #9: OK
20:53:27> Wait failover by #4 with old epoch 24: OK
20:53:31> Cluster should eventually be up again: OK
20:53:32> Cluster is writable again: OK
20:53:32> Restarting node #9: OK
20:53:32> Instance #9 is now a slave: OK
20:53:33> We can read back the value we set before: OK
--- Iteration 8 ---
20:53:33> Cluster is writable before failover: OK
20:53:33> Killing node #1: OK
20:53:33> Cluster should eventually be up again: OK
20:53:33> Cluster is writable again: OK
20:53:33> Restarting node #1: OK
20:53:33> Instance #1 is now a slave: OK
20:53:33> We can read back the value we set before: OK
--- Iteration 7 ---
20:53:33> Cluster is writable before failover: OK
20:53:33> Killing node #1: OK
20:53:33> Cluster should eventually be up again: OK
20:53:33> Cluster is writable again: OK
20:53:33> Restarting node #1: OK
20:53:33> Instance #1 is now a slave: OK
20:53:33> We can read back the value we set before: OK
--- Iteration 6 ---
20:53:33> Cluster is writable before failover: OK
20:53:33> Killing node #7: OK
20:53:34> Cluster should eventually be up again: OK
20:53:34> Cluster is writable again: OK
20:53:34> Restarting node #7: OK
20:53:34> Instance #7 is now a slave: OK
20:53:34> We can read back the value we set before: OK
--- Iteration 5 ---
20:53:34> Cluster is writable before failover: OK
20:53:34> Killing node #9: OK
20:53:35> Cluster should eventually be up again: OK
20:53:35> Cluster is writable again: OK
20:53:35> Restarting node #9: OK
20:53:35> Instance #9 is now a slave: OK
20:53:35> We can read back the value we set before: OK
--- Iteration 4 ---
20:53:35> Cluster is writable before failover: OK
20:53:35> Killing node #5: OK
20:53:36> Cluster should eventually be up again: OK
20:53:36> Cluster is writable again: OK
20:53:36> Restarting node #5: OK
20:53:36> Instance #5 is now a slave: OK
20:53:36> We can read back the value we set before: OK
--- Iteration 3 ---
20:53:36> Cluster is writable before failover: OK
20:53:36> Killing node #8: OK
20:53:37> Cluster should eventually be up again: OK
20:53:37> Cluster is writable again: OK
20:53:37> Restarting node #8: OK
20:53:37> Instance #8 is now a slave: OK
20:53:37> We can read back the value we set before: OK
--- Iteration 2 ---
20:53:37> Cluster is writable before failover: OK
20:53:37> Killing node #1: OK
20:53:38> Cluster should eventually be up again: OK
20:53:38> Cluster is writable again: OK
20:53:38> Restarting node #1: OK
20:53:38> Instance #1 is now a slave: OK
20:53:38> We can read back the value we set before: OK
--- Iteration 1 ---
20:53:39> Cluster is writable before failover: OK
20:53:39> Killing node #7: OK
20:53:40> Cluster should eventually be up again: OK
20:53:40> Cluster is writable again: OK
20:53:40> Restarting node #7: OK
20:53:40> Instance #7 is now a slave: OK
20:53:40> We can read back the value we set before: OK
20:53:40> Post condition: current_epoch >= my_epoch everywhere: OK
Testing unit: 04-resharding.tcl
20:53:40> (init) Restart killed instances: OK
20:53:40> Cluster nodes are reachable: OK
20:53:40> Cluster nodes hard reset: OK
20:53:41> Cluster Join and auto-discovery test: OK
20:53:47> Before slots allocation, all nodes report cluster failure: OK
20:53:47> Create a 5 nodes cluster: OK
20:53:51> Cluster is up: OK
20:53:51> Enable AOF in all the instances: OK
20:53:51> Cluster consistency during live resharding: WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW...Starting resharding.../usr/bin/env: 'ruby': No such file or directory
WWWWWWWWWW...Starting resharding.../usr/bin/env: 'ruby': No such file or directory
WWWWWWWWWW...Starting resharding.../usr/bin/env: 'ruby': No such file or directory
WWWWWWWWWW...Starting resharding.../usr/bin/env: 'ruby': No such file or directory
WWWWWWWWWW...Starting resharding.../usr/bin/env: 'ruby': No such file or directory
WWWWWWWWWW...Starting resharding.../usr/bin/env: 'ruby': No such file or directory
WWWWWWWWWW...Starting resharding.../usr/bin/env: 'ruby': No such file or directory
WWWWWWWWWW...Starting resharding.../usr/bin/env: 'ruby': No such file or directory
WWWWWWWWWW...Starting resharding.../usr/bin/env: 'ruby': No such file or directory
WWWWWWWWWW...Starting resharding.../usr/bin/env: 'ruby': No such file or directory
WWWWWWWWWWOK
20:54:17> Verify 50000 keys for consistency with logical content: OK
20:54:22> Crash and restart all the instances: OK
20:54:44> Cluster should eventually be up again: OK
20:54:46> Verify 50000 keys after the crash & restart: OK
20:54:50> Disable AOF in all the instances: OK
20:54:50> Verify slaves consistency: OK
Testing unit: 05-slave-selection.tcl
20:54:53> (init) Restart killed instances: OK
20:54:53> Cluster nodes are reachable: OK
20:54:53> Cluster nodes hard reset: OK
20:55:13> Cluster Join and auto-discovery test: OK
20:55:32> Before slots allocation, all nodes report cluster failure: OK
20:55:32> Create a 5 nodes cluster: OK
20:55:39> Cluster is up: OK
20:55:39> The first master has actually two slaves: OK
20:55:39> Slaves of #0 are instance #5 and #10 as expected: OK
20:55:39> Instance #5 and #10 synced with the master: OK
20:55:39> Slaves are both able to receive and acknowledge writes: OK
20:55:39> Write data while slave #10 is paused and can't receive it: OK
20:55:50> Wait for instance #5 (and not #10) to turn into a master: OK
20:55:54> Wait for the node #10 to return alive before ending the test: OK
20:55:55> Cluster should eventually be up again: OK
20:55:56> Node #10 should eventually replicate node #5: OK
Testing unit: 06-slave-stop-cond.tcl
20:55:56> (init) Restart killed instances: redis/0 OK
20:55:56> Cluster nodes are reachable: OK
20:55:57> Cluster nodes hard reset: OK
20:56:01> Cluster Join and auto-discovery test: OK
20:56:15> Before slots allocation, all nodes report cluster failure: OK
20:56:15> Create a 5 nodes cluster: OK
20:56:19> Cluster is up: OK
20:56:19> The first master has actually one slave: OK
20:56:19> Slaves of #0 is instance #5 as expected: OK
20:56:19> Instance #5 synced with the master: OK
20:56:19> Lower the slave validity factor of #5 to the value of 2: OK
20:56:19> Break master-slave link and prevent further reconnections: OK
20:56:40> Slave #5 is reachable and alive: OK
20:56:40> Slave #5 should not be able to failover: OK
20:56:50> Cluster should be down: OK
Testing unit: 07-replica-migration.tcl
20:56:50> (init) Restart killed instances: redis/0 OK
20:56:50> Cluster nodes are reachable: OK
20:56:50> Cluster nodes hard reset: OK
20:57:05> Cluster Join and auto-discovery test: OK
20:57:20> Before slots allocation, all nodes report cluster failure: OK
20:57:20> Create a 5 nodes cluster: OK
20:57:25> Cluster is up: OK
20:57:25> Each master should have two replicas attached: OK
20:57:25> Killing all the slaves of master #0 and #1: OK
20:57:30> Master #0 should have at least one replica: OK
20:57:35> Master #1 should have at least one replica: OK
20:57:35> Master #2 should have at least one replica: OK
20:57:35> Master #3 should have at least one replica: OK
20:57:35> Master #4 should have at least one replica: OK
20:57:35> (init) Restart killed instances: redis/5 redis/6 redis/10 redis/11 OK
20:57:36> Cluster nodes are reachable: OK
20:57:36> Cluster nodes hard reset: OK
20:57:38> Cluster Join and auto-discovery test: OK
20:57:43> Before slots allocation, all nodes report cluster failure: OK
20:57:43> Create a 5 nodes cluster: OK
20:57:47> Cluster is up: OK
20:57:47> Kill slave #7 of master #2. Only slave left is #12 now: OK
20:57:47> Killing master node #2, #12 should failover: OK
20:57:48> Wait for failover: OK
20:57:53> Cluster should eventually be up again: OK
20:57:55> Cluster is writable: OK
20:57:55> Instance 12 is now a master without slaves: OK
20:57:55> Master #12 should get at least one migrated replica: OK
Testing unit: 08-update-msg.tcl
20:58:01> (init) Restart killed instances: redis/2 redis/7 OK
20:58:01> Cluster nodes are reachable: OK
20:58:02> Cluster nodes hard reset: OK
20:58:04> Cluster Join and auto-discovery test: OK
20:58:10> Before slots allocation, all nodes report cluster failure: OK
20:58:11> Create a 5 nodes cluster: OK
20:58:14> Cluster is up: OK
20:58:14> Cluster is writable: OK
20:58:14> Instance #5 is a slave: OK
20:58:14> Instance #5 synced with the master: OK
20:58:14> Killing one master node: OK
20:58:15> Wait for failover: OK
20:58:20> Cluster should eventually be up again: OK
20:58:21> Cluster is writable: OK
20:58:21> Instance #5 is now a master: OK
20:58:21> Killing the new master #5: OK
20:58:22> Cluster should be down now: OK
20:58:25> Restarting the old master node: OK
20:58:25> Instance #0 gets converted into a slave: OK
20:58:25> Restarting the new master node: OK
20:58:25> Cluster is up again: OK
Testing unit: 09-pubsub.tcl
20:58:32> (init) Restart killed instances: OK
20:58:32> Cluster nodes are reachable: OK
20:58:32> Cluster nodes hard reset: OK
20:58:34> Cluster Join and auto-discovery test: OK
20:58:39> Before slots allocation, all nodes report cluster failure: OK
20:58:39> Create a 5 nodes cluster: OK
20:58:43> Test publishing to master: OK
20:58:43> Test publishing to slave: OK
Testing unit: 10-manual-failover.tcl
20:58:43> (init) Restart killed instances: OK
20:58:43> Cluster nodes are reachable: OK
20:58:43> Cluster nodes hard reset: OK
20:58:45> Cluster Join and auto-discovery test: OK
20:58:49> Before slots allocation, all nodes report cluster failure: OK
20:58:49> Create a 5 nodes cluster: OK
20:58:53> Cluster is up: OK
20:58:53> Cluster is writable: OK
20:58:53> Instance #5 is a slave: OK
20:58:53> Instance #5 synced with the master: OK
20:58:53> Send CLUSTER FAILOVER to #5, during load: WWWWWWWWWWOK
20:58:56> Wait for failover: OK
20:58:56> Cluster should eventually be up again: OK
20:58:56> Cluster is writable: OK
20:58:57> Instance #5 is now a master: OK
20:58:57> Verify 50000 keys for consistency with logical content: OK
20:58:57> Instance #0 gets converted into a slave: OK
20:58:57> (init) Restart killed instances: OK
20:58:57> Cluster nodes are reachable: OK
20:58:57> Cluster nodes hard reset: OK
20:58:59> Cluster Join and auto-discovery test: OK
20:59:03> Before slots allocation, all nodes report cluster failure: OK
20:59:03> Create a 5 nodes cluster: OK
20:59:06> Cluster is up: OK
20:59:06> Cluster is writable: OK
20:59:06> Instance #5 is a slave: OK
20:59:06> Instance #5 synced with the master: OK
20:59:06> Make instance #0 unreachable without killing it: OK
20:59:06> Send CLUSTER FAILOVER to instance #5: OK
20:59:06> Instance #5 is still a slave after some time (no failover): OK
20:59:11> Wait for instance #0 to return back alive: OK
20:59:16> (init) Restart killed instances: OK
20:59:16> Cluster nodes are reachable: OK
20:59:17> Cluster nodes hard reset: OK
20:59:18> Cluster Join and auto-discovery test: OK
20:59:22> Before slots allocation, all nodes report cluster failure: OK
20:59:22> Create a 5 nodes cluster: OK
20:59:26> Cluster is up: OK
20:59:26> Cluster is writable: OK
20:59:26> Instance #5 is a slave: OK
20:59:26> Instance #5 synced with the master: OK
20:59:26> Make instance #0 unreachable without killing it: OK
20:59:26> Send CLUSTER FAILOVER to instance #5: OK
20:59:26> Instance #5 is a master after some time: OK
20:59:26> Wait for instance #0 to return back alive: OK
Testing unit: 11-manual-takeover.tcl
20:59:36> (init) Restart killed instances: OK
20:59:36> Cluster nodes are reachable: OK
20:59:36> Cluster nodes hard reset: OK
20:59:37> Cluster Join and auto-discovery test: OK
20:59:41> Before slots allocation, all nodes report cluster failure: OK
20:59:41> Create a 5 nodes cluster: OK
20:59:45> Cluster is up: OK
20:59:45> Cluster is writable: OK
20:59:45> Killing majority of master nodes: OK
20:59:48> Cluster should eventually be down: OK
20:59:49> Use takeover to bring slaves back: OK
20:59:49> Cluster should eventually be up again: OK
20:59:50> Cluster is writable: OK
20:59:50> Instance #5, #6, #7 are now masters: OK
20:59:50> Restarting the previously killed master nodes: OK
20:59:51> Instance #0, #1, #2 gets converted into a slaves: OK
Testing unit: 12-replica-migration-2.tcl
20:59:51> (init) Restart killed instances: OK
20:59:51> Cluster nodes are reachable: OK
20:59:51> Cluster nodes hard reset: OK
20:59:53> Cluster Join and auto-discovery test: OK
20:59:57> Before slots allocation, all nodes report cluster failure: OK
20:59:57> Create a 5 nodes cluster: OK
21:00:00> Cluster is up: OK
21:00:00> Each master should have at least two replicas attached: OK
21:00:00> Resharding all the master #0 slots away from it: /usr/bin/env: 'ruby': No such file or directory
    while executing
"exec  ../../../src/redis-trib.rb rebalance  --weight ${master0_id}=0  127.0.0.1:[get_instance_attrib redis 0 port] >@ stdout"
    ("uplevel" body line 2)
    invoked from within
"uplevel 1 $code"
    (procedure "test" line 6)
    invoked from within
"test "Resharding all the master #0 slots away from it" {
    set output [exec \
        ../../../src/redis-trib.rb rebalance \
        --weight ${mast..."
    (file "../tests/12-replica-migration-2.tcl" line 32)
    invoked from within
"source $test"
    (procedure "run_tests" line 9)
    invoked from within
"run_tests"
    (procedure "main" line 7)
    invoked from within
"main"
Cleaning up...
