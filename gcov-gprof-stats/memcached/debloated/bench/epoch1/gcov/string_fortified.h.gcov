        -:    0:Source:/usr/include/x86_64-linux-gnu/bits/string_fortified.h
        -:    0:Programs:0
        -:    1:/* Copyright (C) 2004-2018 Free Software Foundation, Inc.
        -:    2:   This file is part of the GNU C Library.
        -:    3:
        -:    4:   The GNU C Library is free software; you can redistribute it and/or
        -:    5:   modify it under the terms of the GNU Lesser General Public
        -:    6:   License as published by the Free Software Foundation; either
        -:    7:   version 2.1 of the License, or (at your option) any later version.
        -:    8:
        -:    9:   The GNU C Library is distributed in the hope that it will be useful,
        -:   10:   but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   11:   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
        -:   12:   Lesser General Public License for more details.
        -:   13:
        -:   14:   You should have received a copy of the GNU Lesser General Public
        -:   15:   License along with the GNU C Library; if not, see
        -:   16:   <http://www.gnu.org/licenses/>.  */
        -:   17:
        -:   18:#ifndef _BITS_STRING_FORTIFIED_H
        -:   19:#define _BITS_STRING_FORTIFIED_H 1
        -:   20:
        -:   21:#ifndef _STRING_H
        -:   22:# error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
        -:   23:#endif
        -:   24:
        -:   25:#if !__GNUC_PREREQ (5,0)
        -:   26:__warndecl (__warn_memset_zero_len,
        -:   27:	    "memset used with constant zero length parameter; this could be due to transposed parameters");
        -:   28:#endif
        -:   29:
        -:   30:__fortify_function void *
        -:   31:__NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
        -:   32:	       size_t __len))
        -:   33:{
    #####:   34:  return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
    %%%%%:   34-block  0
    %%%%%:   34-block  1
    %%%%%:   34-block  2
    %%%%%:   34-block  3
    %%%%%:   34-block  4
    %%%%%:   34-block  5
    %%%%%:   34-block  6
    %%%%%:   34-block  7
    %%%%%:   34-block  8
    %%%%%:   34-block  9
    %%%%%:   34-block 10
    %%%%%:   34-block 11
    %%%%%:   34-block 12
    %%%%%:   34-block 13
    %%%%%:   34-block 14
    %%%%%:   34-block 15
    %%%%%:   34-block 16
    %%%%%:   34-block 17
    %%%%%:   34-block 18
    %%%%%:   34-block 19
    %%%%%:   34-block 20
    %%%%%:   34-block 21
    %%%%%:   34-block 22
    %%%%%:   34-block 23
    %%%%%:   34-block 24
    %%%%%:   34-block 25
    %%%%%:   34-block 26
    %%%%%:   34-block 27
    %%%%%:   34-block 28
    %%%%%:   34-block 29
    %%%%%:   34-block 30
    %%%%%:   34-block 31
    %%%%%:   34-block 32
    %%%%%:   34-block 33
    %%%%%:   34-block 34
    %%%%%:   34-block 35
    %%%%%:   34-block 36
    %%%%%:   34-block 37
    %%%%%:   34-block 38
    %%%%%:   34-block 39
    %%%%%:   34-block 40
    %%%%%:   34-block 41
    %%%%%:   34-block 42
    %%%%%:   34-block 43
    %%%%%:   34-block 44
    %%%%%:   34-block 45
    %%%%%:   34-block 46
    %%%%%:   34-block 47
    %%%%%:   34-block 48
    %%%%%:   34-block 49
    %%%%%:   34-block 50
    %%%%%:   34-block 51
    %%%%%:   34-block 52
    %%%%%:   34-block 53
    %%%%%:   34-block 54
    %%%%%:   34-block 55
    %%%%%:   34-block 56
    %%%%%:   34-block 57
    %%%%%:   34-block 58
    %%%%%:   34-block 59
    %%%%%:   34-block 60
    %%%%%:   34-block 61
    %%%%%:   34-block 62
    %%%%%:   34-block 63
    %%%%%:   34-block 64
    %%%%%:   34-block 65
    %%%%%:   34-block 66
    %%%%%:   34-block 67
    %%%%%:   34-block 68
    %%%%%:   34-block 69
    %%%%%:   34-block 70
    %%%%%:   34-block 71
    %%%%%:   34-block 72
    %%%%%:   34-block 73
    %%%%%:   34-block 74
    %%%%%:   34-block 75
    %%%%%:   34-block 76
    %%%%%:   34-block 77
    %%%%%:   34-block 78
    %%%%%:   34-block 79
    %%%%%:   34-block 80
    %%%%%:   34-block 81
    %%%%%:   34-block 82
    %%%%%:   34-block 83
    %%%%%:   34-block 84
    %%%%%:   34-block 85
    %%%%%:   34-block 86
    %%%%%:   34-block 87
    %%%%%:   34-block 88
    %%%%%:   34-block 89
    %%%%%:   34-block 90
    %%%%%:   34-block 91
    %%%%%:   34-block 92
    %%%%%:   34-block 93
    %%%%%:   34-block 94
    %%%%%:   34-block 95
    %%%%%:   34-block 96
    %%%%%:   34-block 97
    %%%%%:   34-block 98
    %%%%%:   34-block 99
    %%%%%:   34-block 100
    %%%%%:   34-block 101
    %%%%%:   34-block 102
    %%%%%:   34-block 103
    %%%%%:   34-block 104
    %%%%%:   34-block 105
    %%%%%:   34-block 106
    %%%%%:   34-block 107
    %%%%%:   34-block 108
    %%%%%:   34-block 109
    %%%%%:   34-block 110
    %%%%%:   34-block 111
    %%%%%:   34-block 112
    %%%%%:   34-block 113
    %%%%%:   34-block 114
    %%%%%:   34-block 115
    %%%%%:   34-block 116
    %%%%%:   34-block 117
    %%%%%:   34-block 118
    %%%%%:   34-block 119
    %%%%%:   34-block 120
    %%%%%:   34-block 121
    %%%%%:   34-block 122
    %%%%%:   34-block 123
    %%%%%:   34-block 124
    %%%%%:   34-block 125
    %%%%%:   34-block 126
    %%%%%:   34-block 127
    %%%%%:   34-block 128
    %%%%%:   34-block 129
    %%%%%:   34-block 130
    %%%%%:   34-block 131
    %%%%%:   34-block 132
    %%%%%:   34-block 133
    %%%%%:   34-block 134
    %%%%%:   34-block 135
    %%%%%:   34-block 136
    %%%%%:   34-block 137
    %%%%%:   34-block 138
    %%%%%:   34-block 139
    %%%%%:   34-block 140
    %%%%%:   34-block 141
    %%%%%:   34-block 142
    %%%%%:   34-block 143
    %%%%%:   34-block 144
    %%%%%:   34-block 145
    %%%%%:   34-block 146
    %%%%%:   34-block 147
    %%%%%:   34-block 148
    %%%%%:   34-block 149
    %%%%%:   34-block 150
    %%%%%:   34-block 151
    %%%%%:   34-block 152
    %%%%%:   34-block 153
    %%%%%:   34-block 154
    %%%%%:   34-block 155
    %%%%%:   34-block 156
    %%%%%:   34-block 157
        -:   35:}
        -:   36:
        -:   37:__fortify_function void *
        -:   38:__NTH (memmove (void *__dest, const void *__src, size_t __len))
        -:   39:{
    #####:   40:  return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
    %%%%%:   40-block  0
    %%%%%:   40-block  1
    %%%%%:   40-block  2
    %%%%%:   40-block  3
    %%%%%:   40-block  4
    %%%%%:   40-block  5
    %%%%%:   40-block  6
    %%%%%:   40-block  7
    %%%%%:   40-block  8
    %%%%%:   40-block  9
    %%%%%:   40-block 10
    %%%%%:   40-block 11
    %%%%%:   40-block 12
    %%%%%:   40-block 13
    %%%%%:   40-block 14
    %%%%%:   40-block 15
    %%%%%:   40-block 16
    %%%%%:   40-block 17
    %%%%%:   40-block 18
    %%%%%:   40-block 19
    %%%%%:   40-block 20
    %%%%%:   40-block 21
    %%%%%:   40-block 22
    %%%%%:   40-block 23
        -:   41:}
        -:   42:
        -:   43:#ifdef __USE_GNU
        -:   44:__fortify_function void *
        -:   45:__NTH (mempcpy (void *__restrict __dest, const void *__restrict __src,
        -:   46:		size_t __len))
        -:   47:{
        -:   48:  return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
        -:   49:}
        -:   50:#endif
        -:   51:
        -:   52:
        -:   53:/* The first two tests here help to catch a somewhat common problem
        -:   54:   where the second and third parameter are transposed.  This is
        -:   55:   especially problematic if the intended fill value is zero.  In this
        -:   56:   case no work is done at all.  We detect these problems by referring
        -:   57:   non-existing functions.  */
        -:   58:__fortify_function void *
        -:   59:__NTH (memset (void *__dest, int __ch, size_t __len))
        -:   60:{
        -:   61:  /* GCC-5.0 and newer implements these checks in the compiler, so we don't
        -:   62:     need them here.  */
        -:   63:#if !__GNUC_PREREQ (5,0)
        -:   64:  if (__builtin_constant_p (__len) && __len == 0
        -:   65:      && (!__builtin_constant_p (__ch) || __ch != 0))
        -:   66:    {
        -:   67:      __warn_memset_zero_len ();
        -:   68:      return __dest;
        -:   69:    }
        -:   70:#endif
    #####:   71:  return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
    %%%%%:   71-block  0
    %%%%%:   71-block  1
    %%%%%:   71-block  2
    %%%%%:   71-block  3
    %%%%%:   71-block  4
    %%%%%:   71-block  5
    %%%%%:   71-block  6
    %%%%%:   71-block  7
    %%%%%:   71-block  8
    %%%%%:   71-block  9
    %%%%%:   71-block 10
    %%%%%:   71-block 11
    %%%%%:   71-block 12
    %%%%%:   71-block 13
    %%%%%:   71-block 14
    %%%%%:   71-block 15
    %%%%%:   71-block 16
    %%%%%:   71-block 17
    %%%%%:   71-block 18
    %%%%%:   71-block 19
    %%%%%:   71-block 20
    %%%%%:   71-block 21
    %%%%%:   71-block 22
    %%%%%:   71-block 23
    %%%%%:   71-block 24
    %%%%%:   71-block 25
    %%%%%:   71-block 26
    %%%%%:   71-block 27
    %%%%%:   71-block 28
    %%%%%:   71-block 29
    %%%%%:   71-block 30
    %%%%%:   71-block 31
    %%%%%:   71-block 32
    %%%%%:   71-block 33
    %%%%%:   71-block 34
    %%%%%:   71-block 35
    %%%%%:   71-block 36
    %%%%%:   71-block 37
    %%%%%:   71-block 38
    %%%%%:   71-block 39
    %%%%%:   71-block 40
    %%%%%:   71-block 41
    %%%%%:   71-block 42
    %%%%%:   71-block 43
    %%%%%:   71-block 44
    %%%%%:   71-block 45
    %%%%%:   71-block 46
    %%%%%:   71-block 47
    %%%%%:   71-block 48
    %%%%%:   71-block 49
    %%%%%:   71-block 50
    %%%%%:   71-block 51
    %%%%%:   71-block 52
    %%%%%:   71-block 53
    %%%%%:   71-block 54
    %%%%%:   71-block 55
    %%%%%:   71-block 56
    %%%%%:   71-block 57
        -:   72:}
        -:   73:
        -:   74:#ifdef __USE_MISC
        -:   75:# include <bits/strings_fortified.h>
        -:   76:
        -:   77:void __explicit_bzero_chk (void *__dest, size_t __len, size_t __destlen)
        -:   78:  __THROW __nonnull ((1));
        -:   79:
        -:   80:__fortify_function void
        -:   81:__NTH (explicit_bzero (void *__dest, size_t __len))
        -:   82:{
        -:   83:  __explicit_bzero_chk (__dest, __len, __bos0 (__dest));
        -:   84:}
        -:   85:#endif
        -:   86:
        -:   87:__fortify_function char *
        -:   88:__NTH (strcpy (char *__restrict __dest, const char *__restrict __src))
        -:   89:{
    #####:   90:  return __builtin___strcpy_chk (__dest, __src, __bos (__dest));
    %%%%%:   90-block  0
    %%%%%:   90-block  1
    %%%%%:   90-block  2
    %%%%%:   90-block  3
    %%%%%:   90-block  4
    %%%%%:   90-block  5
    %%%%%:   90-block  6
    %%%%%:   90-block  7
        -:   91:}
        -:   92:
        -:   93:#ifdef __USE_GNU
        -:   94:__fortify_function char *
        -:   95:__NTH (stpcpy (char *__restrict __dest, const char *__restrict __src))
        -:   96:{
        -:   97:  return __builtin___stpcpy_chk (__dest, __src, __bos (__dest));
        -:   98:}
        -:   99:#endif
        -:  100:
        -:  101:
        -:  102:__fortify_function char *
        -:  103:__NTH (strncpy (char *__restrict __dest, const char *__restrict __src,
        -:  104:		size_t __len))
        -:  105:{
    #####:  106:  return __builtin___strncpy_chk (__dest, __src, __len, __bos (__dest));
    %%%%%:  106-block  0
    %%%%%:  106-block  1
    %%%%%:  106-block  2
    %%%%%:  106-block  3
    %%%%%:  106-block  4
    %%%%%:  106-block  5
    %%%%%:  106-block  6
    %%%%%:  106-block  7
    %%%%%:  106-block  8
    %%%%%:  106-block  9
    %%%%%:  106-block 10
        -:  107:}
        -:  108:
        -:  109:/* XXX We have no corresponding builtin yet.  */
        -:  110:extern char *__stpncpy_chk (char *__dest, const char *__src, size_t __n,
        -:  111:			    size_t __destlen) __THROW;
        -:  112:extern char *__REDIRECT_NTH (__stpncpy_alias, (char *__dest, const char *__src,
        -:  113:					       size_t __n), stpncpy);
        -:  114:
        -:  115:__fortify_function char *
        -:  116:__NTH (stpncpy (char *__dest, const char *__src, size_t __n))
        -:  117:{
        -:  118:  if (__bos (__dest) != (size_t) -1
        -:  119:      && (!__builtin_constant_p (__n) || __n > __bos (__dest)))
        -:  120:    return __stpncpy_chk (__dest, __src, __n, __bos (__dest));
        -:  121:  return __stpncpy_alias (__dest, __src, __n);
        -:  122:}
        -:  123:
        -:  124:
        -:  125:__fortify_function char *
        -:  126:__NTH (strcat (char *__restrict __dest, const char *__restrict __src))
        -:  127:{
    #####:  128:  return __builtin___strcat_chk (__dest, __src, __bos (__dest));
    %%%%%:  128-block  0
    %%%%%:  128-block  1
    %%%%%:  128-block  2
    %%%%%:  128-block  3
        -:  129:}
        -:  130:
        -:  131:
        -:  132:__fortify_function char *
        -:  133:__NTH (strncat (char *__restrict __dest, const char *__restrict __src,
        -:  134:		size_t __len))
        -:  135:{
        -:  136:  return __builtin___strncat_chk (__dest, __src, __len, __bos (__dest));
        -:  137:}
        -:  138:
        -:  139:#endif /* bits/string_fortified.h */
