diff --git a/COPYING b/COPYING
new file mode 100644
index 0000000..e77696a
--- /dev/null
+++ b/COPYING
@@ -0,0 +1,339 @@
+		    GNU GENERAL PUBLIC LICENSE
+		       Version 2, June 1991
+
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.
+                          675 Mass Ave, Cambridge, MA 02139, USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+			    Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Library General Public License instead.)  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+  To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+  Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+		    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
+
+Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
+
+  1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+  5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+  7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and "any
+later version", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+			    NO WARRANTY
+
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+		     END OF TERMS AND CONDITIONS
+
+	    How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) 19yy  <name of author>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+
+Also add information on how to contact you by electronic and paper mail.
+
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+    Gnomovision version 69, Copyright (C) 19yy name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items--whatever suits your program.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the program, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
+
+  <signature of Ty Coon>, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Library General
+Public License instead of this License.
diff --git a/Control b/Control
new file mode 100644
index 0000000..632074f
--- /dev/null
+++ b/Control
@@ -0,0 +1,2 @@
+requires: stdlibs
+Maintainer: adam@os.inf.tu-dresden.de
diff --git a/LICENSE.spdx b/LICENSE.spdx
new file mode 100644
index 0000000..0f35606
--- /dev/null
+++ b/LICENSE.spdx
@@ -0,0 +1,34 @@
+## This file states the license of this package and possibly its subpackages
+## in machine and human readable format. The PackageName refers to the package
+## whose license is defined by PackageLicenseConcluded.
+## For more information about this file format visit the SPDX website at
+## https://spdx.org
+
+SPDXVersion: SPDX-2.1
+DataLicense: CC0-1.0
+SPDXID: SPDXRef-Document
+DocumentNamespace: spdx:kernkonzept/hello-3d6b6f92-7bee-4678-b821-c6f5a63d60a5
+DocumentName: LICENSE.spdx
+
+Creator: Organization: Kernkonzept GmbH (info@kernkonzept.com)
+
+## Package Information
+PackageName: hello
+PackageOriginator: Organization: Kernkonzept GmbH (info@kernkonzept.com)
+PackageLicenseDeclared: (GPL-2.0-only OR LicenseRef-kk-custom)
+PackageLicenseConcluded: (GPL-2.0-only OR LicenseRef-kk-custom)
+FilesAnalyzed: false
+PackageCopyrightText: NOASSERTION
+PackageDownloadLocation: NOASSERTION
+
+## License Information
+LicenseID: LicenseRef-kk-custom
+ExtractedText: <text>Kernkonzept Custom License
+
+If you have sought a special licensing agreement with Kernkonzept GmbH the
+terms and conditions from therein apply to this package.
+
+If you require a different licensing scheme please contact us at
+info@kernkonzept.com.
+</text>
+LicenseName: Kernkonzept Custom License
diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..f8ca7cc
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,4 @@
+PKGDIR	= .
+L4DIR	?= $(PKGDIR)/../..
+
+include $(L4DIR)/mk/subdir.mk
diff --git a/README b/README
new file mode 100644
index 0000000..3e44ff4
--- /dev/null
+++ b/README
@@ -0,0 +1 @@
+Simple Hello Example.
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..2451a85
--- /dev/null
+++ b/README.md
@@ -0,0 +1,19 @@
+# L4Re Hello Example
+
+This package contains a simple Hello World example application for the L4Re
+operating system.
+
+# Documentation
+
+This package is part of the L4Re operating system. For documentation and
+build instructions see the
+[L4Re wiki](https://kernkonzept.com/L4Re/guides/l4re).
+
+# Contributions
+
+We welcome contributions. Please see our contributors guide on
+[how to contribute](https://kernkonzept.com/L4Re/contributing/l4re).
+
+# License
+
+Detailed licensing and copyright information can be found in the [LICENSE](LICENSE.spdx) file.
diff --git a/server/Makefile b/server/Makefile
new file mode 100644
index 0000000..04ac0da
--- /dev/null
+++ b/server/Makefile
@@ -0,0 +1,4 @@
+PKGDIR		?= ..
+L4DIR		?= $(PKGDIR)/../..
+
+include $(L4DIR)/mk/subdir.mk
diff --git a/server/src/Makefile b/server/src/Makefile
new file mode 100644
index 0000000..8931050
--- /dev/null
+++ b/server/src/Makefile
@@ -0,0 +1,7 @@
+PKGDIR		?= ../..
+L4DIR		?= $(PKGDIR)/../..
+
+TARGET		= aobench
+SRC_C		= main.c
+
+include $(L4DIR)/mk/prog.mk
diff --git a/server/src/main.c b/server/src/main.c
new file mode 100644
index 0000000..c105630
--- /dev/null
+++ b/server/src/main.c
@@ -0,0 +1,347 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <assert.h>
+#include <math.h>
+#include <time.h>
+
+#define WIDTH        256
+#define HEIGHT       256
+#define NSUBSAMPLES  2
+#define NAO_SAMPLES  8
+
+typedef struct _vec
+{
+	double x;
+	double y;
+	double z;
+} vec;
+
+
+typedef struct _Isect
+{
+	double t;
+	vec    p;
+	vec    n;
+	int    hit;
+} Isect;
+
+typedef struct _Sphere
+{
+	vec    center;
+	double radius;
+
+} Sphere;
+
+typedef struct _Plane
+{
+	vec    p;
+	vec    n;
+
+} Plane;
+
+typedef struct _Ray
+{
+	vec    org;
+	vec    dir;
+} Ray;
+
+Sphere spheres[3];
+Plane  plane;
+
+static double vdot(vec v0, vec v1)
+{
+	return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;
+}
+
+static void vcross(vec *c, vec v0, vec v1)
+{
+
+	c->x = v0.y * v1.z - v0.z * v1.y;
+	c->y = v0.z * v1.x - v0.x * v1.z;
+	c->z = v0.x * v1.y - v0.y * v1.x;
+}
+
+static void vnormalize(vec *c)
+{
+	double length = sqrt(vdot((*c), (*c)));
+
+	if (fabs(length) > 1.0e-17) {
+		c->x /= length;
+		c->y /= length;
+		c->z /= length;
+	}
+}
+
+	void
+ray_sphere_intersect(Isect *isect, const Ray *ray, const Sphere *sphere)
+{
+	vec rs;
+
+	rs.x = ray->org.x - sphere->center.x;
+	rs.y = ray->org.y - sphere->center.y;
+	rs.z = ray->org.z - sphere->center.z;
+
+	double B = vdot(rs, ray->dir);
+	double C = vdot(rs, rs) - sphere->radius * sphere->radius;
+	double D = B * B - C;
+
+	if (D > 0.0) {
+		double t = -B - sqrt(D);
+
+		if ((t > 0.0) && (t < isect->t)) {
+			isect->t = t;
+			isect->hit = 1;
+
+			isect->p.x = ray->org.x + ray->dir.x * t;
+			isect->p.y = ray->org.y + ray->dir.y * t;
+			isect->p.z = ray->org.z + ray->dir.z * t;
+
+			isect->n.x = isect->p.x - sphere->center.x;
+			isect->n.y = isect->p.y - sphere->center.y;
+			isect->n.z = isect->p.z - sphere->center.z;
+
+			vnormalize(&(isect->n));
+		}
+	}
+}
+
+	void
+ray_plane_intersect(Isect *isect, const Ray *ray, const Plane *plane)
+{
+	double d = -vdot(plane->p, plane->n);
+	double v = vdot(ray->dir, plane->n);
+
+	if (fabs(v) < 1.0e-17) return;
+
+	double t = -(vdot(ray->org, plane->n) + d) / v;
+
+	if ((t > 0.0) && (t < isect->t)) {
+		isect->t = t;
+		isect->hit = 1;
+
+		isect->p.x = ray->org.x + ray->dir.x * t;
+		isect->p.y = ray->org.y + ray->dir.y * t;
+		isect->p.z = ray->org.z + ray->dir.z * t;
+
+		isect->n = plane->n;
+	}
+}
+
+	void
+orthoBasis(vec *basis, vec n)
+{
+	basis[2] = n;
+	basis[1].x = 0.0; basis[1].y = 0.0; basis[1].z = 0.0;
+
+	if ((n.x < 0.6) && (n.x > -0.6)) {
+		basis[1].x = 1.0;
+	} else if ((n.y < 0.6) && (n.y > -0.6)) {
+		basis[1].y = 1.0;
+	} else if ((n.z < 0.6) && (n.z > -0.6)) {
+		basis[1].z = 1.0;
+	} else {
+		basis[1].x = 1.0;
+	}
+
+	vcross(&basis[0], basis[1], basis[2]);
+	vnormalize(&basis[0]);
+
+	vcross(&basis[1], basis[2], basis[0]);
+	vnormalize(&basis[1]);
+}
+
+
+void ambient_occlusion(vec *col, const Isect *isect)
+{
+	int    i, j;
+	int    ntheta = NAO_SAMPLES;
+	int    nphi   = NAO_SAMPLES;
+	double eps = 0.0001;
+
+	vec p;
+
+	p.x = isect->p.x + eps * isect->n.x;
+	p.y = isect->p.y + eps * isect->n.y;
+	p.z = isect->p.z + eps * isect->n.z;
+
+	vec basis[3];
+	orthoBasis(basis, isect->n);
+
+	double occlusion = 0.0;
+
+	for (j = 0; j < ntheta; j++) {
+		for (i = 0; i < nphi; i++) {
+			double theta = sqrt(1.0);
+			double phi   = 2.0 * M_PI * 1.0;
+
+			double x = cos(phi) * theta;
+			double y = sin(phi) * theta;
+			double z = sqrt(1.0 - theta * theta);
+
+			// local -> global
+			double rx = x * basis[0].x + y * basis[1].x + z * basis[2].x;
+			double ry = x * basis[0].y + y * basis[1].y + z * basis[2].y;
+			double rz = x * basis[0].z + y * basis[1].z + z * basis[2].z;
+
+			Ray ray;
+
+			ray.org = p;
+			ray.dir.x = rx;
+			ray.dir.y = ry;
+			ray.dir.z = rz;
+
+			Isect occIsect;
+			occIsect.t   = 1.0e+17;
+			occIsect.hit = 0;
+
+			ray_sphere_intersect(&occIsect, &ray, &spheres[0]);
+			ray_sphere_intersect(&occIsect, &ray, &spheres[1]);
+			ray_sphere_intersect(&occIsect, &ray, &spheres[2]);
+			ray_plane_intersect (&occIsect, &ray, &plane);
+
+			if (occIsect.hit) occlusion += 1.0;
+
+		}
+	}
+
+	occlusion = (ntheta * nphi - occlusion) / (double)(ntheta * nphi);
+
+	col->x = occlusion;
+	col->y = occlusion;
+	col->z = occlusion;
+}
+
+	unsigned char
+clamp(double f)
+{
+	int i = (int)(f * 255.5);
+
+	if (i < 0) i = 0;
+	if (i > 255) i = 255;
+
+	return (unsigned char)i;
+}
+
+
+	void
+render(unsigned char *img, int w, int h, int nsubsamples)
+{
+	int x, y;
+	int u, v;
+
+	double *fimg = (double *)malloc(sizeof(double) * w * h * 3);
+	memset((void *)fimg, 0, sizeof(double) * w * h * 3);
+
+	for (y = 0; y < h; y++) {
+		printf("Progress %d/%d\n", y, h);
+		for (x = 0; x < w; x++) {
+			for (v = 0; v < nsubsamples; v++) {
+				for (u = 0; u < nsubsamples; u++) {
+					double px = (x + (u / (double)nsubsamples) - (w / 2.0)) / (w / 2.0);
+					double py = -(y + (v / (double)nsubsamples) - (h / 2.0)) / (h / 2.0);
+
+					Ray ray;
+
+					ray.org.x = 0.0;
+					ray.org.y = 0.0;
+					ray.org.z = 0.0;
+
+					ray.dir.x = px;
+					ray.dir.y = py;
+					ray.dir.z = -1.0;
+					vnormalize(&(ray.dir));
+
+					Isect isect;
+					isect.t   = 1.0e+17;
+					isect.hit = 0;
+
+					ray_sphere_intersect(&isect, &ray, &spheres[0]);
+					ray_sphere_intersect(&isect, &ray, &spheres[1]);
+					ray_sphere_intersect(&isect, &ray, &spheres[2]);
+					ray_plane_intersect (&isect, &ray, &plane);
+
+					if (isect.hit) {
+						vec col;
+						ambient_occlusion(&col, &isect);
+
+						fimg[3 * (y * w + x) + 0] += col.x;
+						fimg[3 * (y * w + x) + 1] += col.y;
+						fimg[3 * (y * w + x) + 2] += col.z;
+					}
+
+				}
+			}
+
+			fimg[3 * (y * w + x) + 0] /= (double)(nsubsamples * nsubsamples);
+			fimg[3 * (y * w + x) + 1] /= (double)(nsubsamples * nsubsamples);
+			fimg[3 * (y * w + x) + 2] /= (double)(nsubsamples * nsubsamples);
+
+			img[3 * (y * w + x) + 0] = clamp(fimg[3 *(y * w + x) + 0]);
+			img[3 * (y * w + x) + 1] = clamp(fimg[3 *(y * w + x) + 1]);
+			img[3 * (y * w + x) + 2] = clamp(fimg[3 *(y * w + x) + 2]);
+		}
+	}
+
+}
+
+	void
+init_scene()
+{
+	spheres[0].center.x = -2.0;
+	spheres[0].center.y =  0.0;
+	spheres[0].center.z = -3.5;
+	spheres[0].radius = 0.5;
+
+	spheres[1].center.x = -0.5;
+	spheres[1].center.y =  0.0;
+	spheres[1].center.z = -3.0;
+	spheres[1].radius = 0.5;
+
+	spheres[2].center.x =  1.0;
+	spheres[2].center.y =  0.0;
+	spheres[2].center.z = -2.2;
+	spheres[2].radius = 0.5;
+
+	plane.p.x = 0.0;
+	plane.p.y = -0.5;
+	plane.p.z = 0.0;
+
+	plane.n.x = 0.0;
+	plane.n.y = 1.0;
+	plane.n.z = 0.0;
+
+}
+
+	void
+saveppm(const char *fname, int w, int h, unsigned char *img)
+{
+	FILE *fp;
+
+	fp = fopen(fname, "wb");
+	assert(fp);
+
+	fprintf(fp, "P6\n");
+	fprintf(fp, "%d %d\n", w, h);
+	fprintf(fp, "255\n");
+	fwrite(img, w * h * 3, 1, fp);
+	fclose(fp);
+}
+
+	int
+main(int argc, char **argv)
+{
+	struct timeval st, et;
+	gettimeofday(&st,NULL);
+	unsigned char *img = (unsigned char *)malloc(WIDTH * HEIGHT * 3);
+
+	init_scene();
+
+	render(img, WIDTH, HEIGHT, NSUBSAMPLES);
+	gettimeofday(&et,NULL);
+	int elapsed = (((et.tv_sec - st.tv_sec) * 1000000) + (et.tv_usec - st.tv_usec));
+
+	printf("Elapsed: %d\n", elapsed);
+	/* saveppm("ao.ppm", WIDTH, HEIGHT, img);  */
+	return 0;
+}
